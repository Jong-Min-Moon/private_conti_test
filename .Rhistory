x <- rmvnorm(5000, mean = c(0.2, 0.2), sigma = sigma)
par(mfrow=c(2,2))
plot(x, pch = 20, cex = .1)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
hist(x1_tilde, breaks = 20)
hist(x2_tilde, breaks = 20)
#4. different mean
sigma = matrix(c(1, .5, .5, 1 ), nrow = 2)
x <- rmvnorm(5000, mean = c(0.2, 0.2), sigma = sigma)
par(mfrow=c(2,2))
plot(x, pch = 20, cex = .1)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
hist(x1_tilde, breaks = 20)
hist(x2_tilde, breaks = 20)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.2, 0.2), sigma = sigma)
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
par(mfrow=c(2,2))
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(0.2, 0.2), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.8, 0.8), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
#5. higher variance
sigma = matrix(2*c(1, .5, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(0.2, 0.2), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.8, 0.8), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
#5. higher variance
sigma = matrix(5*c(1, .5, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(0.2, 0.2), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.8, 0.8), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
#5. higher variance
sigma = matrix(2*c(1, .5, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(0.2, 0.2), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.8, 0.8), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
#5. higher variance
sigma = matrix(2*c(1, .5, 0, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(0.2, 0.2), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.8, 0.8), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
#5. higher variance
sigma = matrix(2*c(1, 0, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(0.2, 0.2), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.8, 0.8), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
#5. higher variance
sigma = matrix(2*c(1, 0, .5, 1 ), nrow = 2)
#5. higher variance
sigma = matrix(2*c(1, 0, .5, 1 ), nrow = 2)
#5. higher variance
sigma = matrix(2*c(1, 0, .5, 1 ), nrow = 2)
#5. higher variance
sigma = matrix(2*c(1, 0, .5, 1 ), nrow = 2)
#5. higher variance
sigma = matrix(2*c(1, 0, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(0, 0), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.8, 0.8), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
#4. different mean
sigma = matrix(c(1, .5, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(-1, -1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.8, 0.8), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
#5. higher variance
sigma = matrix(5*c(1, .5, .5, 1 ), nrow = 2)
#4. different mean
sigma = matrix(c(1, .5, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(-1, -1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.5, 0.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(0.8, 0.8), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
#4. different mean
sigma = matrix(c(1, .5, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(-1, -1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(-0.5, -0.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(.5, .5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
x <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
sigma = matrix(c(1, .5, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(-1, -1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
y <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
y1_tilde <- pnorm(y[,1])
y2_tilde <- pnorm(y[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
plot(y1_tilde, y2_tilde, pch = 20, cex = .1, add = TRUE)
sigma = matrix(c(1, .5, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(-1, -1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
y <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
y1_tilde <- pnorm(y[,1])
y2_tilde <- pnorm(y[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1)
points(y1_tilde, y2_tilde, pch = 20, cex = .1)
plot(x1_tilde, x2_tilde, pch = 20, cex = .1, col = "blue")
points(y1_tilde, y2_tilde, pch = 20, cex = .1, col = "red")
sigma = matrix(c(1, .5, .5, 1 ), nrow = 2)
par(mfrow=c(2,2))
x <- rmvnorm(5000, mean = c(-2, -2), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
y <- rmvnorm(5000, mean = c(2, 2), sigma = sigma)
y1_tilde <- pnorm(y[,1])
y2_tilde <- pnorm(y[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1, col = "blue")
points(y1_tilde, y2_tilde, pch = 20, cex = .1, col = "red")
x <- rmvnorm(5000, mean = c(-1, -1), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
y <- rmvnorm(5000, mean = c(1, 1), sigma = sigma)
y1_tilde <- pnorm(y[,1])
y2_tilde <- pnorm(y[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1, col = "blue")
points(y1_tilde, y2_tilde, pch = 20, cex = .1, col = "red")
x <- rmvnorm(5000, mean = c(.5, .5), sigma = sigma)
# plot 3
x <- rmvnorm(5000, mean = c(-.5, -.5), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
y <- rmvnorm(5000, mean = c(.5, .5), sigma = sigma)
y1_tilde <- pnorm(y[,1])
y2_tilde <- pnorm(y[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1, col = "blue")
points(y1_tilde, y2_tilde, pch = 20, cex = .1, col = "red")
# plot 4
x <- rmvnorm(5000, mean = c(-.2, -.2), sigma = sigma)
x1_tilde <- pnorm(x[,1])
x2_tilde <- pnorm(x[,2])
y <- rmvnorm(5000, mean = c(.2, .2), sigma = sigma)
y1_tilde <- pnorm(y[,1])
y2_tilde <- pnorm(y[,2])
plot(x1_tilde, x2_tilde, pch = 20, cex = .1, col = "blue")
points(y1_tilde, y2_tilde, pch = 20, cex = .1, col = "red")
# plot 1
CopulaNonuniform <- function(n, mu, sigma){
x <- rmvnorm(5000, mean = c(-2, -2), sigma = sigma)
return(as.matrix(pnorm(x)))
}
CopulaNonuniform(10, c(0,0), sigma= sigma)
breaks <- seq(from = 0, to = 1, length = n.intervals + 1)
seq(from = 0, to = 1, length = 5+1)
(3-1):0
3^c(1,2,3)
source("~/GitHub/private_conti_test/R_implm/test.R")
runif(30)
runif(24)
c(
0.19901582, 0.29330425, 0.08031318, 0.27744206, 0.38371595, 0.07725842, 0.58872328,
0.60947456, 0.78765378, 0.18596928, 0.20049580, 0.04321161, 0.60499579, 0.38050702,
0.26301983, 0.58410214, 0.42093993, 0.42060113, 0.89575178, 0.57233768, 0.01160462,
0.55440856, 0.50919182, 0.80756614
)
data <- matrix(
c(
0.19901582, 0.29330425, 0.08031318, 0.27744206, 0.38371595, 0.07725842, 0.58872328,
0.60947456, 0.78765378, 0.18596928, 0.20049580, 0.04321161, 0.60499579, 0.38050702,
0.26301983, 0.58410214, 0.42093993, 0.42060113, 0.89575178, 0.57233768, 0.01160462,
0.55440856, 0.50919182, 0.80756614
), ncol = 4
)
data
.TransformIntervalIndex(data, n.intervals = 4)
.TransformIntervalIndex(data, n.intervals = 4)
.TransformIntervalIndex(data, n.intervals = 5)
.TransformIntervalIndex(data, n.intervals = 6)
data
data <- matrix(
c(
0.19901582, 0.29330425, 0.08031318, 0.27744206, 0.38371595, 0.07725842, 0.58872328,
0.60947456, 0.78765378, 0.18596928, 0.20049580, 0.04321161, 0.60499579, 0.38050702,
0.26301983, 0.58410214, 0.42093993, 0.42060113, 0.89575178, 0.57233768, 0.01160462,
0.55440856, 0.50919182, 0.80756614
), ncol = 4, byrow = TRUE)
data
.TransformIntervalIndex(data, n.intervals = 4)
# 1. test of TransformIntervalIndex
data <- matrix(
c(
0.19901582, 0.29330425, 0.08031318, 0.27744206, 0.38371595, 0.07725842, 0.58872328,
0.60947456, 0.78765378, 0.18596928, 0.20049580, 0.04321161, 0.60499579, 0.38050702,
0.26301983, 0.58410214, 0.42093993, 0.42060113, 0.89575178, 0.57233768, 0.01160462,
0.55440856, 0.50919182, 0.80756614
), ncol = 4, byrow = TRUE)
data
.TransformIntervalIndex(data, n.intervals = 4)
.TransformIntervalIndex(data, n.intervals = 5)
.TransformIntervalIndex(data, n.intervals = 6)
index_1 <- .TransformIntervalIndex(data, n.intervals = 4)
index_2 <- .TransformIntervalIndex(data, n.intervals = 5)
index_3 <- .TransformIntervalIndex(data, n.intervals = 6)
.TransformMultivariate <- function(data.interval, n.bin){
d <- ncol(data.interval)
return(1 + (data.interval - 1) %*% n.bin^( (d-1) : 0 ))
}
# 2. test of
.TransformMultivariate(index_1, 4)
# 2. test of
.TransformMultivariate(index_1, 4)
.TransformMultivariate(index_2, 5)
.TransformMultivariate(index_3, 6)
4^4
# 2. test of TransformMultivariate
multi_1 <- .TransformMultivariate(index_1, 4)
multi_2 <- .TransformMultivariate(index_2, 5)
multi_3 <- .TransformMultivariate(index_3, 6)
# 2. test of TransformMultivariate
multi_1 <- .TransformMultivariate(index_1, 4)
multi_1
multi_2 <- .TransformMultivariate(index_2, 5)
multi_2
multi_3 <- .TransformMultivariate(index_3, 6)
multi_3
# 3. test of TransformOnehot
onehot_1 <- TransformOnehot(index_1, 4)
# 3. test of TransformOnehot
onehot_1 <- .TransformOnehot(index_1, 4)
onehot_1
# 3. test of TransformOnehot
onehot_1 <- .TransformOnehot(multi_1, 4)
onehot_1
# 3. test of TransformOnehot
onehot_1 <- .TransformOnehot(multi_1, 4)
# 3. test of TransformOnehot
onehot_1 <- .TransformOnehot(multi_1, 4^4)
onehot_1
onehot_2 <- .TransformOnehot(multi_1, 4^5)
onehot_2
onehot_3 <- .TransformOnehot(multi_1, 4^6)
onehot_3
# 3. test of TransformOnehot
onehot_1 <- .TransformOnehot(multi_1, 4^4)
onehot_1
onehot_1[1,]
noise.conti(10,2,0.5)
var(noise.conti(10,2,0.5))
var(noise.conti(1000,2,0.5))
var(noise.conti(1000,2,0.5))
var(noise.conti(1000,2,0.5))
var(noise.conti(1000,2,0.5))
var(noise.conti(1000,2,0.5))
var(noise.conti(1000,2,0.5))
var(noise.conti(1000,2,0.5))
var(noise.conti(1000,2,0.5))
var(noise.discrete(1000,2,0.5))
var(noise.discrete(1000,2,0.5))
var(noise.discrete(1000,2,0.5))
var(PrivatizeTwoSample(data, alpha = 0.5))
PrivatizeTwoSample(data, alpha = 0.5)
PrivatizeTwoSample(data, alpha = 0.5)
PrivatizeTwoSample(data, alpha = 0.5)
PrivatizeTwoSample(data, alpha = 0.5)
PrivatizeTwoSample(data, alpha = 0.5)
private_conti_test
source("~/GitHub/private_conti_test/R_implm/test.R")
PrivatizeTwoSample(data, alpha = 0.5)
sqrt(8)/0.3
(sqrt(8)/0.3)*sqrt(5^2)
(sqrt(8)/0.3)*sqrt(5^2)
((sqrt(8)/0.3)*sqrt(5^2))^2
source("~/GitHub/private_conti_test/R_implm/test.R")
source("~/GitHub/private_conti_test/R_implm/data_generator.R")
####CHANGE HERE#####
n1 <- n2 <- 50000
####################
kappa = 5 #number of bins
alpha = 0.3 #privacy level
gamma = 0.05 # significance level
n.tests = 100 #number of tests for power estimation
B = 100 # number of permutations
set.seed(2022)
start_time <- Sys.time()
copula.mean.1 <- c(-1, -1, -1)
copula.mean.2 <- c( 1,  1, 1)
sigma = matrix(c(1, .5, .5,.5, 1, .5, .5, .5, 1 ), nrow = 3)
X <- CopulaNonuniform(n1, copula.mean.1, sigma)
X <- CopulaNonuniform(n1, copula.mean.1, sigma)
X <- CopulaNonuniform(n1, copula.mean.1, sigma)
source("~/GitHub/private_conti_test/R_implm/test.R")
source("~/GitHub/private_conti_test/R_implm/data_generator.R")
X <- CopulaNonuniform(n1, copula.mean.1, sigma)
Y <- CopulaNonuniform(n2, copula.mean.2, sigma)
plt(X)
plot(X)
source("~/GitHub/private_conti_test/R_implm/test.R")
source("~/GitHub/private_conti_test/R_implm/data_generator.R")
####CHANGE HERE#####
n1 <- n2 <- 1000
set.seed(2022)
start_time <- Sys.time()
copula.mean.1 <- c(-1, -1, -1)
copula.mean.2 <- c( 1,  1, 1)
sigma = matrix(c(1, .5, .5,.5, 1, .5, .5, .5, 1 ), nrow = 3)
X <- CopulaNonuniform(n1, copula.mean.1, sigma)
Y <- CopulaNonuniform(n2, copula.mean.2, sigma)
plot_3d_copula_compare <- function(n, copula.mean.1, copula.mean.2, sigma){
blue <- CopulaNonuniform(n, copula.mean.1, sigma)
red <- CopulaNonuniform(n, copula.mean.1, sigma)
label <- c(rep(1,n), rep(0,n))
data <- rbind(blue, red)
data <- cbind(data, label)
data <- data.frame(data)
p <- plot_ly(
data,
x = data[ ,1],
y = data[ ,2],
z = data[ ,3],
color = data[,4], colors = c('#BF382A', '#0C4B8E')
) %>% add_markers(marker=list(size=1))
return(p)
}
plot_3d_copula_compare(copula.mean.1, copula.mean.2, sigma)
copula.mean.1 <- c(-1, -1, -1)
copula.mean.2 <- c( 1,  1, 1)
sigma = matrix(c(1, .5, .5,.5, 1, .5, .5, .5, 1 ), nrow = 3)
plot_3d_copula_compare(copula.mean.1, copula.mean.2, sigma)
sigma = matrix(c(1, .5, .5,.5, 1, .5, .5, .5, 1 ), nrow = 3)
X <- CopulaNonuniform(n1, copula.mean.1, sigma)
Y <- CopulaNonuniform(n2, copula.mean.2, sigma)
plot_3d_copula_compare(copula.mean.1, copula.mean.2, sigma)
plot_3d_copula_compare(100,copula.mean.1, copula.mean.2, sigma)
plot_3d_copula_compare <- function(n, copula.mean.1, copula.mean.2, sigma){
blue <- CopulaNonuniform(n, copula.mean.1, sigma)
red <- CopulaNonuniform(n, copula.mean.2, sigma)
label <- c(rep(1,n), rep(0,n))
data <- rbind(blue, red)
data <- cbind(data, label)
data <- data.frame(data)
p <- plot_ly(
data,
x = data[ ,1],
y = data[ ,2],
z = data[ ,3],
color = data[,4], colors = c('#BF382A', '#0C4B8E')
) %>% add_markers(marker=list(size=1))
return(p)
}
plot_3d_copula_compare(100,copula.mean.1, copula.mean.2, sigma)
library(plotly)
plot_3d_copula_compare <- function(n, copula.mean.1, copula.mean.2, sigma){
blue <- CopulaNonuniform(n, copula.mean.1, sigma)
red <- CopulaNonuniform(n, copula.mean.2, sigma)
label <- c(rep(1,n), rep(0,n))
data <- rbind(blue, red)
data <- cbind(data, label)
data <- data.frame(data)
p <- plot_ly(
data,
x = data[ ,1],
y = data[ ,2],
z = data[ ,3],
color = data[,4], colors = c('#BF382A', '#0C4B8E')
) %>% add_markers(marker=list(size=1))
return(p)
}
plot_3d_copula_compare(100,copula.mean.1, copula.mean.2, sigma)
plot_3d_copula_compare(1000,copula.mean.1, copula.mean.2, sigma)
plot_3d_copula_compare(5000,copula.mean.1, copula.mean.2, sigma)
plot_3d_copula_compare(3000,copula.mean.1, copula.mean.2, sigma)
plot_3d_copula_compare(3000,copula.mean.1, copula.mean.2, sigma)
copula.mean.2
plot_3d_copula_compare(5000,copula.mean.1, copula.mean.2, sigma)
htmlwidgets::saveWidget(as_widget(p), "~//Users/mac/GitHub/private_conti_test/R_implm/3d_copula.html")
p <- plot_3d_copula_compare(5000,copula.mean.1, copula.mean.2, sigma)
htmlwidgets::saveWidget(as_widget(p), "~//Users/mac/GitHub/private_conti_test/R_implm/3d_copula.html")
htmlwidgets::saveWidget(as_widget(p), "~/GitHub/private_conti_test/R_implm/3d_copula.html")
